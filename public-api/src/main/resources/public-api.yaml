openapi: 3.0.1
info:
  title: AllOfUs Public API
  description: The API for the AllOfUs data browser and public storefront.
  termsOfService: http://www.pmi-ops.org/terms_of_service.html
  contact:
    name: developer_help@pmi-ops.org
  license:
    name: BSD
  version: 0.1.0
servers:
  - url: https://public-api.pmi-ops.org/
security:
  - aou_oauth: []
paths:
  /v1/cdrVersions:
    get:
      tags:
        - cdrVersions
      description: Returns all curated data repository (CDR) versions that the user
        has access to
      operationId: getCdrVersions
      responses:
        "200":
          description: A list of CDR versions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrVersionListResponse'
  /v1/genomics/participant-counts:
    get:
      tags:
        - genomics
      description: Gets the participant counts
      operationId: getParticipantCounts
      responses:
        "200":
          description: A collection of results from achilles results view
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
  /v1/genomics/search-variants:
    post:
      tags:
        - genomics
      description: Gets the list of matched variants
      operationId: searchVariants
      requestBody:
        description: search concept request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchVariantsRequest'
        required: false
      responses:
        "200":
          description: A collection of variants from the wgs_variant table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantListResponse'
      x-codegen-request-body-name: request
  /v1/genomics/variant-search-result-size:
    post:
      tags:
        - genomics
      description: Gets the size of variant result list
      operationId: getVariantSearchResultSize
      requestBody:
        description: variant result size request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariantResultSizeRequest'
        required: false
      responses:
        "200":
          description: Variant result list size
          content:
            application/json:
              schema:
                type: integer
                format: int64
      x-codegen-request-body-name: request
  /v1/genomics/chart-demo-data:
    get:
      tags:
        - genomics
      description: Gets the demographic participant counts
      operationId: getChartData
      responses:
        "200":
          description: A collection of results from achilles results view
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisListResponse'
  /v1/genomics/variant-details/{variantId}:
    get:
      tags:
        - genomics
      description: Gets the variant details
      operationId: getVariantDetails
      parameters:
        - name: variantId
          in: path
          description: the variant id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Variant Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantInfo'
  /v1/genomics/genomic-filter-options:
    get:
      tags:
        - genomics
      description: Gets the size of each genomic filter option
      operationId: getGenomicFilterOptions
      parameters:
        - name: variant-search-term
          in: query
          description: variant search term
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A collection of filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicFilters'
  /v1/config:
    get:
      tags:
        - config
      description: Returns some server configuration data.
      operationId: getConfig
      responses:
        "200":
          description: Configuration data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
      security: []
  /v1/databrowser/cdrversion-used:
    get:
      tags:
        - dataBrowser
      description: Gets the cdr versions
      operationId: getCdrVersionUsed
      responses:
        "200":
          description: Default cdr version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrVersion'
        "500":
          description: Internal Server Error
          content: {}
  /v1/databrowser/count-analysis:
    get:
      tags:
        - dataBrowser
      description: Gets EHR biological sex and age count analysis
      operationId: getCountAnalysis
      parameters:
        - name: domain-id
          in: query
          description: domain id
          required: true
          schema:
            type: string
        - name: domain-desc
          in: query
          description: domain desc
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A collection of count analysis for biological sex and age
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountAnalysis'
  /v1/databrowser/survey-question-counts:
    get:
      tags:
        - dataBrowser
      description: Gets participant count of question by each stratum
      operationId: getSurveyQuestionCounts
      parameters:
        - name: questionConceptId
          in: query
          required: true
          schema:
            type: string
        - name: questionPath
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Gender and age stratum counts for each question
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisListResponse'
  /v1/databrowser/fitbit-analysis-results:
    get:
      tags:
        - dataBrowser
      description: Gets analysis results of fitbit
      operationId: getFitbitAnalysisResults
      parameters:
        - name: concept-names
          in: query
          description: concept name
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Analysis objects for each of fitbit measurement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptAnalysisListResponse'
  /v1/databrowser/concept-analysis-results:
    get:
      tags:
        - dataBrowser
      description: Gets analysis results for concept
      operationId: getConceptAnalysisResults
      parameters:
        - name: concept-ids
          in: query
          description: concept id
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: domain-id
          in: query
          description: domain id
          schema:
            type: string
      responses:
        "200":
          description: A collection of analysis for concept
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptAnalysisListResponse'
  /v1/databrowser/participant-count:
    get:
      tags:
        - dataBrowser
      description: Gets results for an analysis id and stratum
      operationId: getParticipantCount
      responses:
        "200":
          description: A collection of analysis results from achilles_results_view
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchillesResult'
  /v1/databrowser/gender-count:
    get:
      tags:
        - dataBrowser
      description: Gets results for an analysis id
      operationId: getGenderAnalysis
      responses:
        "200":
          description: Gender analysis along with results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
  /v1/databrowser/getCriteriaRolledCounts:
    get:
      tags:
        - dataBrowser
      description: Gets the rolled up count from criteria
      operationId: getCriteriaRolledCounts
      parameters:
        - name: conceptId
          in: query
          description: parent concept id
          required: true
          schema:
            type: integer
            format: int64
        - name: domain
          in: query
          description: parent concept domain
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Rolled up counts of concept
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriteriaParentResponse'
  /v1/databrowser/getCriteriaChildren:
    get:
      tags:
        - dataBrowser
      description: Gets the children when parent concept is expanded in ui
      operationId: getCriteriaChildren
      parameters:
        - name: parentId
          in: query
          description: parent id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Criteria children
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriteriaListResponse'
  /v1/databrowser/domain-totals:
    get:
      tags:
        - dataBrowser
      description: Gets the domain filters and survey modules with the count of all
        concepts and questions
      operationId: getDomainTotals
      parameters:
        - name: searchWord
          in: query
          description: search key word
          schema:
            type: string
        - name: testFilter
          in: query
          description: measurement filter
          schema:
            type: integer
            format: int32
        - name: orderFilter
          in: query
          description: measurement filter
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A collection of domains and survey modules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainInfosAndSurveyModulesResponse'
  /v1/databrowser/searchConcepts:
    post:
      tags:
        - dataBrowser
      description: Gets list of matched concepts
      operationId: searchConcepts
      requestBody:
        description: search concept request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchConceptsRequest'
        required: false
      responses:
        "200":
          description: A collection of matched concepts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptListResponse'
      x-codegen-request-body-name: request
  /v1/databrowser/source-concepts:
    get:
      tags:
        - dataBrowser
      description: Get children of the given concept
      operationId: getSourceConcepts
      parameters:
        - name: concept_id
          in: query
          description: concept id to get maps to concepts
          required: true
          schema:
            type: integer
            format: int64
        - name: minCount
          in: query
          description: minimum source count
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: a collection of concepts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptListResponse'
  /v1/databrowser/survey-questions:
    get:
      tags:
        - dataBrowser
      description: Get survey questions
      operationId: getSurveyQuestions
      parameters:
        - name: survey_concept_id
          in: query
          description: survey concept id
          required: true
          schema:
            type: integer
            format: int64
        - name: search_word
          in: query
          description: search word in surveys page
          schema:
            type: string
      responses:
        "200":
          description: survey question fetch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyQuestionFetchResponse'
  /v1/databrowser/sub-questions:
    get:
      tags:
        - dataBrowser
      description: Get survey sub questions
      operationId: getSubQuestions
      parameters:
        - name: survey_concept_id
          in: query
          description: survey concept id
          required: true
          schema:
            type: integer
            format: int64
        - name: question_concept_id
          in: query
          description: question concept id
          required: true
          schema:
            type: integer
            format: int64
        - name: answer_concept_id
          in: query
          description: answer concept id
          required: true
          schema:
            type: integer
            format: int64
        - name: level
          in: query
          description: sub question level
          required: true
          schema:
            type: integer
            format: int32
        - name: path
          in: query
          description: question path
          schema:
            type: string
      responses:
        "200":
          description: survey sub question fetch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyQuestionFetchResponse'
  /v1/databrowser/survey-question-results:
    get:
      tags:
        - dataBrowser
      description: Get Survey Question Results
      operationId: getSurveyQuestionResults
      parameters:
        - name: survey_concept_id
          in: query
          description: survey concept id
          required: true
          schema:
            type: integer
            format: int64
        - name: question_concept_id
          in: query
          description: question concept id
          required: true
          schema:
            type: integer
            format: int64
        - name: questionPath
          in: query
          description: question path
          schema:
            type: string
      responses:
        "200":
          description: survey question results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisListResponse'
  /v1/databrowser/survey-version-counts:
    get:
      tags:
        - dataBrowser
      description: Get Survey Version Counts
      operationId: getSurveyVersionCounts
      parameters:
        - name: survey_concept_id
          in: query
          description: survey concept id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: survey version counts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyVersionCountResponse'
components:
  schemas:
    Concept:
      required:
        - conceptClassId
        - conceptCode
        - conceptId
        - conceptName
        - domainId
        - standardConcept
        - vocabularyId
      type: object
      properties:
        conceptId:
          type: integer
          description: id of the concept
          format: int64
        conceptName:
          type: string
          description: name of concept
        domainId:
          type: string
          description: domain of concept
        vocabularyId:
          type: string
          description: vocabulary of concept
        conceptCode:
          type: string
          description: original vocab code of concept
        conceptClassId:
          type: string
          description: class of concept
        standardConcept:
          type: string
          description: standard concept value 1 char
        countValue:
          type: integer
          description: est count in the cdr
          format: int64
        sourceCountValue:
          type: integer
          description: est source count in the cdr
          format: int64
        prevalence:
          type: number
          description: prevalence among participants percent count divided num participants
          format: float
        conceptSynonyms:
          type: array
          description: concept synonym names
          items:
            type: string
        canSelect:
          type: integer
          description: filters clickable concepts
          format: int32
        measurementConceptInfo:
          $ref: '#/components/schemas/MeasurementConceptInfo'
        drugBrands:
          type: array
          description: drug brand names
          items:
            type: string
        standardConcepts:
          type: array
          items:
            $ref: '#/components/schemas/Concept'
        matchType:
          $ref: '#/components/schemas/MatchType'
    ConceptListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Concept'
        matchType:
          $ref: '#/components/schemas/MatchType'
        matchedConceptName:
          type: string
          description: matched concept name
    SurveyQuestionFetchResponse:
      type: object
      properties:
        questions:
          $ref: '#/components/schemas/SurveyMetadataListResponse'
        survey:
          $ref: '#/components/schemas/SurveyModule'
    SubQuestionFetchResponse:
      type: object
      properties:
        questions:
          $ref: '#/components/schemas/SurveyMetadataListResponse'
    SurveyVersionCountResponse:
      type: object
      properties:
        analyses:
          $ref: '#/components/schemas/AnalysisListResponse'
    MeasurementConceptInfo:
      type: object
      properties:
        conceptId:
          type: integer
          format: int64
        hasValues:
          type: integer
          format: int32
    ConfigResponse:
      type: object
      properties:
        projectId:
          type: string
          description: The cloud project in which this app is running.
        dataBrowserIsSafe:
          type: boolean
          description: Whether the data is safe to show. An emergency page will show
            if set to false.
        publicApiKeyForErrorReports:
          type: string
          description: |
            Stackdriver API key for error reporting, scoped to a particular
            domain. If unset, Stackdriver error reporting should be disabled.
    Criteria:
      required:
        - id
        - name
        - parentId
        - path
        - type
      type: object
      properties:
        id:
          type: integer
          description: Primary identifier which is unique within a CDR version.
          format: int64
        parentId:
          type: integer
          description: The parent id of the criteria. 0 if this is the root node of
            a criteria tree
          format: int64
        type:
          type: string
          description: type of this criteria
        subtype:
          type: string
          description: sub type of this criteria
        code:
          type: string
          description: concept code
        name:
          type: string
          description: concept name
        group:
          type: boolean
          description: boolean field which represents if the criteria has children
        selectable:
          type: boolean
          description: boolean field which represents if the criteria is selectable
        count:
          type: integer
          description: count
          format: int64
        sourceCount:
          type: integer
          description: count
          format: int64
        domainId:
          type: string
          description: domain id
        conceptId:
          type: string
          description: concept id
        path:
          type: string
          description: path of concept in the criteria tree
        synonyms:
          type: string
          description: synonyms
        canSelect:
          type: integer
          description: filters clickable concepts
          format: int32
    CriteriaListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Criteria'
    CriteriaParentResponse:
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/Criteria'
    SurveyMetadata:
      required:
        - conceptId
        - conceptName
        - surveyName
      type: object
      properties:
        id:
          type: integer
          description: id of each row
          format: int64
        conceptId:
          type: integer
          description: id of the concept
          format: int64
        conceptName:
          type: string
          description: name of concept
        surveyName:
          type: string
          description: survey name
        conceptCode:
          type: string
          description: original vocab code of concept
        countValue:
          type: integer
          description: est count in the cdr
          format: int64
        surveyConceptId:
          type: integer
          description: survey concept id
          format: int64
        sub:
          type: integer
          description: flag to indicate if a question is a sub question
          format: int32
        path:
          type: string
          description: question path
        is_parent_question:
          type: integer
          description: flag to indicate if the question is parent question
          format: int32
        orderNumber:
          type: integer
          description: question order number
          format: int32
        questionString:
          type: string
          description: question string
        type:
          type: string
          description: type of survey data
        countAnalysis:
          $ref: '#/components/schemas/Analysis'
        genderAnalysis:
          $ref: '#/components/schemas/Analysis'
        ageAnalysis:
          $ref: '#/components/schemas/Analysis'
        versionAnalysis:
          $ref: '#/components/schemas/Analysis'
        participantCountAnalysis:
          $ref: '#/components/schemas/Analysis'
    SurveyMetadataListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SurveyMetadata'
    AchillesResult:
      required:
        - analysisId
      type: object
      properties:
        id:
          type: integer
          description: pk id for jpa code to work
          format: int64
        analysisId:
          type: integer
          description: id analysis
          format: int64
        stratum1:
          type: string
          description: stratum 1
        stratum2:
          type: string
          description: stratum 2
        stratum3:
          type: string
          description: stratum 3
        stratum4:
          type: string
          description: stratum 4
        stratum5:
          type: string
          description: stratum 5
        stratum6:
          type: string
          description: stratum6
        stratum7:
          type: string
          description: stratum7
        analysisStratumName:
          type: string
          description: stratum 5 Name
        measurementValueType:
          type: string
          description: measurement value type (text / numeric)
        countValue:
          type: integer
          description: count
          format: int64
        sourceCountValue:
          type: integer
          description: source count
          format: int64
    AchillesResultListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AchillesResult'
    AchillesResultDist:
      required:
        - analysisId
      type: object
      properties:
        id:
          type: integer
          description: pk id for jpa code to work
          format: int64
        analysisId:
          type: integer
          description: id analysis
          format: int64
        stratum1:
          type: string
          description: stratum 1
        stratum2:
          type: string
          description: stratum 2
        stratum3:
          type: string
          description: stratum 3
        stratum4:
          type: string
          description: stratum 4
        stratum5:
          type: string
          description: stratum 5
        stratum6:
          type: string
          description: stratum 6
        countValue:
          type: integer
          description: count
          format: int64
        minValue:
          type: number
          description: min value
          format: float
        maxValue:
          type: number
          description: max value
          format: float
        avgValue:
          type: number
          description: avg value
          format: float
        stdevValue:
          type: number
          description: std deviation value
          format: float
        medianValue:
          type: number
          description: median value
          format: float
        p10Value:
          type: number
          description: 10th percentile  value
          format: float
        p25Value:
          type: number
          description: 25th percentile value
          format: float
        p75Value:
          type: number
          description: 75th percentile value
          format: float
        p90Value:
          type: number
          description: 90th percentile value
          format: float
    Analysis:
      required:
        - analysisId
      type: object
      properties:
        analysisId:
          type: integer
          description: id analysis
          format: int64
        analysisName:
          type: string
          description: analysis name
        stratum1Name:
          type: string
          description: usually concept name corresponding to stratum
        stratum2Name:
          type: string
          description: usually concept name corresponding to stratum
        stratum3Name:
          type: string
          description: usually concept name corresponding to stratum
        stratum4Name:
          type: string
          description: usually concept name corresponding to stratum
        stratum5Name:
          type: string
          description: usually concept name corresponding to stratum
        stratum6Name:
          type: string
          description: usually concept name corresponding to stratum
        stratum7Name:
          type: string
          description: usually concept name corresponding to stratum
        chartType:
          type: string
          description: chart type to display for this analysis column pie box
        dataType:
          type: string
          description: data type of this analysis count or distribution
        results:
          type: array
          description: count results
          items:
            $ref: '#/components/schemas/AchillesResult'
        distResults:
          type: array
          description: distribution results
          items:
            $ref: '#/components/schemas/AchillesResultDist'
        unitName:
          type: string
          description: unit name
    AnalysisListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Analysis'
    DomainInfosAndSurveyModulesResponse:
      required:
        - domainInfos
        - surveyModules
      type: object
      properties:
        domainInfos:
          type: array
          items:
            $ref: '#/components/schemas/DomainInfo'
        surveyModules:
          type: array
          items:
            $ref: '#/components/schemas/SurveyModule'
    ConceptAnalysis:
      required:
        - conceptId
      type: object
      properties:
        conceptId:
          type: string
          description: concept id
        countAnalysis:
          $ref: '#/components/schemas/Analysis'
        genderAnalysis:
          $ref: '#/components/schemas/Analysis'
        ageAnalysis:
          $ref: '#/components/schemas/Analysis'
        measurementValueGenderAnalysis:
          type: array
          description: measurement value gender analysis
          items:
            $ref: '#/components/schemas/Analysis'
        measurementValueAgeAnalysis:
          type: array
          description: age analysis for measurement values
          items:
            $ref: '#/components/schemas/Analysis'
        measurementDistributionAnalysis:
          type: array
          description: measurement distribution analysis
          items:
            $ref: '#/components/schemas/Analysis'
        measurementGenderCountAnalysis:
          type: array
          description: measurement gender count by unit analysis
          items:
            $ref: '#/components/schemas/Analysis'
        ehrCountAnalysis:
          $ref: '#/components/schemas/Analysis'
        participantCountAnalysis:
          $ref: '#/components/schemas/Analysis'
    ConceptAnalysisListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ConceptAnalysis'
    CountAnalysis:
      required:
        - domainId
      type: object
      properties:
        domainId:
          type: string
          description: domain id
        genderCountAnalysis:
          $ref: '#/components/schemas/Analysis'
        ageCountAnalysis:
          $ref: '#/components/schemas/Analysis'
    StandardConceptFilter:
      type: string
      description: "filter on whether standard, non-standard, or all concepts should\
        \ be returned\\"
      enum:
        - ALL_CONCEPTS
        - STANDARD_CONCEPTS
        - NON_STANDARD_CONCEPTS
        - STANDARD_OR_CODE_ID_MATCH
    TestFilter:
      type: string
      description: filter to toggle lab measurement tests
      enum:
        - SELECTED
        - UNSELECTED
    OrderFilter:
      type: string
      description: filter to toggle lab measurement orders
      enum:
        - SELECTED
        - UNSELECTED
    Domain:
      type: string
      description: a domain for concepts corresponding to a table in the OMOP schema
      enum:
        - OBSERVATION
        - PROCEDURE
        - DRUG
        - CONDITION
        - MEASUREMENT
        - DEVICE
        - DEATH
        - VISIT
    MatchType:
      type: string
      description: match column type on concept search
      enum:
        - CONCEPT_CODE
        - CONCEPT_ID
        - CONCEPT_NAME
    AnalysisIdConstant:
      type: string
      description: analysis id constant map
      enum:
        - PARTICIPANT_COUNT_ANALYSIS_ID
        - GENDER_ANALYSIS
        - COUNT_ANALYSIS_ID
        - SURVEY_GENDER_COUNT_ANALYSIS_ID
        - SURVEY_AGE_COUNT_ANALYSIS_ID
        - SURVEY_PARTICIPANT_COUNT_ANALYSIS_ID
        - GENDER_ANALYSIS_ID
        - PARTICIPANT_COUNT_BY_DATE_ANALYSIS_ID
        - AGE_ANALYSIS_ID
        - SURVEY_VERSION_PARTICIPANT_COUNT_ANALYSIS_ID
        - SURVEY_VERSION_QUESTION_COUNT_ANALYSIS_ID
        - SURVEY_COUNT_ANALYSIS_ID
        - SURVEY_GENDER_ANALYSIS_ID
        - SURVEY_AGE_ANALYSIS_ID
        - SURVEY_VERSION_ANALYSIS_ID
        - SURVEY_QUESTION_GENDER_COUNT_ANALYSIS_ID
        - SURVEY_QUESTION_AGE_COUNT_ANALYSIS_ID
        - EHR_GENDER_COUNT_ANALYSIS_ID
        - EHR_AGE_COUNT_ANALYSIS_ID
        - RACE_ANALYSIS_ID
        - ETHNICITY_ANALYSIS_ID
        - MEASUREMENT_DIST_ANALYSIS_ID
        - MEASUREMENT_GENDER_ANALYSIS_ID
        - MEASUREMENT_GENDER_UNIT_ANALYSIS_ID
        - RACE_ANALYSIS
        - ETHNICITY_ANALYSIS
        - GENO_GENDER_ANALYSIS
        - GENO_AGE_ANALYSIS
        - GENO_RACE_ANALYSIS
    VariantResultSizeRequest:
      required:
        - query
      type: object
      properties:
        query:
          type: string
          description: |
            A query string that can be used to match a subset of the name (case-insensitively), the entire code value (case-insensitively), or the concept ID.
        filterMetadata:
          $ref: '#/components/schemas/GenomicFilters'
    SearchVariantsRequest:
      required:
        - query
      type: object
      properties:
        query:
          type: string
          description: |
            A query string that can be used to match a subset of the name (case-insensitively), the entire code value (case-insensitively), or the concept ID.
        pageNumber:
          type: integer
          description: By default it returns the first page and then its next pages
            from that on.
        rowCount:
          type: integer
          description: Number of rows user wants to view per page
        sortMetadata:
          $ref: '#/components/schemas/SortMetadata'
        filterMetadata:
          $ref: '#/components/schemas/GenomicFilters'
    SearchConceptsRequest:
      required:
        - query
      type: object
      properties:
        query:
          type: string
          description: |
            A query string that can be used to match a subset of the name (case-insensitively), the entire code value (case-insensitively), or the concept ID.
        standardConceptFilter:
          $ref: '#/components/schemas/StandardConceptFilter'
        vocabularyIds:
          type: array
          description: "The vocabulary ID for the concepts returned (e.g. SNOMED,\
            \ RxNorm)"
          items:
            type: string
        domain:
          $ref: '#/components/schemas/Domain'
        maxResults:
          type: integer
          description: The maximum number of results returned. Defaults to 25.
          format: int32
        minCount:
          type: integer
          description: The minimum count of concepts to be fetched
          format: int32
        pageNumber:
          type: integer
          description: By default it returns the first page and then its next pages
            from that on.
        measurementTests:
          type: integer
          description: By default all the measurement tests are returned
        measurementOrders:
          type: integer
          description: By default all the measurement orders are returned
    CdrVersion:
      required:
        - cdrVersionId
        - creationTime
        - name
      type: object
      properties:
        cdrVersionId:
          type: string
        name:
          type: string
        numParticipants:
          type: integer
          format: int32
        creationTime:
          type: integer
          description: Milliseconds since the UNIX epoch.
          format: int64
    CdrVersionListResponse:
      required:
        - defaultCdrVersionId
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CdrVersion'
        defaultCdrVersionId:
          type: string
          description: ID of the CDR versions that should be used by the user by default
    DomainInfo:
      required:
        - allConceptCount
        - description
        - domain
        - name
        - participantCount
        - standardConceptCount
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/Domain'
        domainConceptId:
          type: integer
          description: domain concept id
          format: int64
        name:
          type: string
          description: display name of the domain
        description:
          type: string
          description: description of the domain
        standardConceptCount:
          type: integer
          description: number of standard concepts in this domain
          format: int64
        allConceptCount:
          type: integer
          description: number of concepts in this domain (standard or non-standard)
          format: int64
        participantCount:
          type: integer
          description: number of participants with data in the CDR for a concept in
            this domain
          format: int64
    SortMetadata:
      type: object
      properties:
        variantId:
          $ref: '#/components/schemas/SortColumnDetails'
        gene:
          $ref: '#/components/schemas/SortColumnDetails'
        consequence:
          $ref: '#/components/schemas/SortColumnDetails'
        variantType:
          $ref: '#/components/schemas/SortColumnDetails'
        clinicalSignificance:
          $ref: '#/components/schemas/SortColumnDetails'
        alleleCount:
          $ref: '#/components/schemas/SortColumnDetails'
        alleleNumber:
          $ref: '#/components/schemas/SortColumnDetails'
        alleleFrequency:
          $ref: '#/components/schemas/SortColumnDetails'
        homozygoteCount:
          $ref: '#/components/schemas/SortColumnDetails'
    SortColumnDetails:
      type: object
      properties:
        sortActive:
          type: boolean
          description: Flag for active sort
        sortDirection:
          type: string
          description: Sort Direction
        sortOrder:
          type: integer
          description: Sort Order
          format: int32
    SurveyModule:
      required:
        - conceptId
        - description
        - name
        - participantCount
        - questionCount
      type: object
      properties:
        conceptId:
          type: integer
          description: the concept ID for the survey module
          format: int64
        name:
          type: string
          description: display name of the module
        description:
          type: string
          description: description of the module
        questionCount:
          type: integer
          description: number of questions in the module
          format: int64
        participantCount:
          type: integer
          description: number of participants with data in the CDR for questions in
            this module
          format: int64
        orderNumber:
          type: integer
          description: survey release order number
          format: int32
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
        statusCode:
          type: integer
          description: Http error status code
        errorClassName:
          type: string
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        errorUniqueId:
          type: string
          description: "Unique ID for this error response, for correlation with backend\
            \ logs"
    ErrorCode:
      type: string
      description: Short parsable error descriptions
      enum:
        - PARSE_ERROR
    Variant:
      required:
        - variantId
      type: object
      properties:
        variantId:
          type: string
          description: id variant
        genes:
          type: string
          description: genes
        consequence:
          type: string
          description: consequence
        variantType:
          type: string
          description: variant type
        proteinChange:
          type: string
          description: protein change
        clinicalSignificance:
          type: string
          description: clinical significance
        alleleCount:
          type: integer
          description: allele count
          format: int64
        alleleNumber:
          type: integer
          description: allele number
          format: int64
        alleleFrequency:
          type: number
          description: allele frequency
          format: double
        homozygoteCount:
          type: integer
          description: homozygote count
          format: int64
    VariantListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
    GenomicFilters:
      type: object
      properties:
        gene:
          $ref: '#/components/schemas/GenomicFilterOptionList'
        consequence:
          $ref: '#/components/schemas/GenomicFilterOptionList'
        variantType:
          $ref: '#/components/schemas/GenomicFilterOptionList'
        clinicalSignificance:
          $ref: '#/components/schemas/GenomicFilterOptionList'
        alleleCount:
          $ref: '#/components/schemas/GenomicFilterOption'
        alleleNumber:
          $ref: '#/components/schemas/GenomicFilterOption'
        alleleFrequency:
          $ref: '#/components/schemas/GenomicFilterOption'
        homozygoteCount:
          $ref: '#/components/schemas/GenomicFilterOption'
    GenomicFilterOption:
      type: object
      properties:
        option:
          type: string
          description: Filter Name
        count:
          type: integer
          description: count
          format: int64
        min:
          type: integer
          description: min value
          format: int64
        max:
          type: integer
          description: max value
          format: int64
        minFreq:
          type: number
          description: min Allele Frequency
          format: float
          default: 0.0
        maxFreq:
          type: number
          description: max Allele Frequency
          format: float
          default: 1.0
        checked:
          type: boolean
          description: boolean flag
    GenomicFilterOptionList:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/GenomicFilterOption'
        filterActive:
          type: boolean
          description: boolean flag to know whether the filter is active
          default: false
    GenomicSearchTermType:
      type: object
      properties:
        variant_id:
          type: string
          description: variant property to build sql query
        whereVariantIdFlag:
          type: boolean
        contig:
          type: string
          description: contig property to build sql query
        low:
          type: integer
          description: position low
          format: int64
        high:
          type: integer
          description: position high
          format: int64
        whereContigFlag:
          type: boolean
        wherePositionFlag:
          type: boolean
        rs_id:
          type: string
          description: rsnumber property to build sql query
        whereRsIdFlag:
          type: boolean
        genes:
          type: string
          description: genes property to build sql query
        whereGeneFlag:
          type: boolean
          description: flag to determine if the search type is gene
        searchSqlQuery:
          type: string
          description: sql query formed
    VariantInfo:
      required:
        - variantId
      type: object
      properties:
        variantId:
          type: string
          description: variant id
        dnaChange:
          type: string
          description: dna change
        transcript:
          type: string
          description: transcript
        rsNumber:
          type: string
          description: rs number
        afrAlleleCount:
          type: integer
          description: African Ancestry Allele Count
          format: int64
        afrAlleleNumber:
          type: integer
          description: African Ancestry Allele Number
          format: int64
        afrAlleleFrequency:
          type: number
          description: African Ancestry Allele Frequency
          format: double
        afrHomozygoteCount:
          type: integer
          description: African Ancestry Homozygote Count
          format: int64
        easAlleleCount:
          type: integer
          description: East Asian Ancestry Allele Count
          format: int64
        easAlleleNumber:
          type: integer
          description: East Asian Ancestry Allele Number
          format: int64
        easAlleleFrequency:
          type: number
          description: East Asian Ancestry Allele Frequency
          format: double
        easHomozygoteCount:
          type: integer
          description: East Asian Ancestry Homozygote Count
          format: int64
        eurAlleleCount:
          type: integer
          description: European Ancestry Allele Count
          format: int64
        eurAlleleNumber:
          type: integer
          description: European Ancestry Allele Number
          format: int64
        eurAlleleFrequency:
          type: number
          description: European Ancestry Allele Frequency
          format: double
        eurHomozygoteCount:
          type: integer
          description: European Ancestry Homozygote Count
          format: int64
        amrAlleleCount:
          type: integer
          description: Latin American Ancestry Allele Count
          format: int64
        amrAlleleNumber:
          type: integer
          description: Latin American Ancestry Allele Number
          format: int64
        amrAlleleFrequency:
          type: number
          description: Latin American Ancestry Allele Frequency
          format: double
        amrHomozygoteCount:
          type: integer
          description: Latin American Ancestry Homozygote Count
          format: int64
        midAlleleCount:
          type: integer
          description: Middle Eastern Ancestry Allele Count
          format: int64
        midAlleleNumber:
          type: integer
          description: Middle Eastern Ancestry Allele Number
          format: int64
        midAlleleFrequency:
          type: number
          description: Middle Eastern Ancestry Allele Frequency
          format: double
        midHomozygoteCount:
          type: integer
          description: Middle Eastern Ancestry Homozygote Count
          format: int64
        sasAlleleCount:
          type: integer
          description: South Asian Ancestry Allele Count
          format: int64
        sasAlleleNumber:
          type: integer
          description: South Asian Ancestry Allele Number
          format: int64
        sasAlleleFrequency:
          type: number
          description: South Asian Ancestry Allele Frequency
          format: double
        sasHomozygoteCount:
          type: integer
          description: South Asian Ancestry Homozygote Count
          format: int64
        othAlleleCount:
          type: integer
          description: Other Ancestry Allele Count
          format: int64
        othAlleleNumber:
          type: integer
          description: Other Ancestry Allele Number
          format: int64
        othAlleleFrequency:
          type: number
          description: Other Ancestry Allele Frequency
          format: double
        othHomozygoteCount:
          type: integer
          description: Other Homozygote Count
          format: int64
        totalAlleleCount:
          type: integer
          description: Total Allele Count
          format: int64
        totalAlleleNumber:
          type: integer
          description: Total Allele Number
          format: int64
        totalAlleleFrequency:
          type: number
          description: Total Allele Frequency
          format: double
        totalHomozygoteCount:
          type: integer
          description: Total Homozygote Count
          format: int64
  securitySchemes:
    aou_oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: ""
          tokenUrl: ""
          scopes: {}
x-original-swagger-version: "2.0"
