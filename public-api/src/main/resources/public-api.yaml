# If validation fails, gradle:generateApi fails claiming this file does not exist.
# For separate validation (with some false positives), do:
#     ./project.rb validate-swagger
swagger: '2.0'
info:
  version: "0.1.0"
  title: "AllOfUs Public API"
  description: "The API for the AllOfUs data browser and public storefront."
  termsOfService: "http://www.pmi-ops.org/terms_of_service.html"
  contact:
    name: "developer_help@pmi-ops.org"
  license:
    name: "BSD"
host: "public-api.pmi-ops.org"
schemes:
  - "https"
produces:
  - "application/json"
securityDefinitions:
  # Establish the fact that *some endpoints* are OAuth protected
  # by defining an `aou_oauth` security mode, which we'll assing
  # to any protected endpoints below.
  aou_oauth:
    # TODO: Vet/fix this token and/or authorization URL to work in practice.
    # These are currently included simply to satisfy the Swagger specification,
    # as this is not directly used to dictate oauth details (just used to
    # annotate which methods require oauth).
    authorizationUrl: ""
    tokenUrl: ""
    type: oauth2
    flow: accessCode
security:
  - aou_oauth: []

# Throughout, we use integer/int64 in preference to string/date-time because Swagger's
# date formatting is inconsistent between server and client. Time values are stored as
# milliseconds since the UNIX epoch.


##########################################################################################
## PATHS
##########################################################################################

paths:

  # CDR versions #########################################################################

  /v1/cdrVersions:
    get:
      tags:
        - cdrVersions
      description: Returns all curated data repository (CDR) versions that the user has access to
      operationId: getCdrVersions
      responses:
        200:
          description: A list of CDR versions.
          schema:
            $ref: "#/definitions/CdrVersionListResponse"

  # Genomics ###########################################################################
  /v1/genomics/participant-counts:
    get:
      tags:
        - genomics
      description: Gets the participant counts
      operationId: "getParticipantCounts"
      parameters: []
      responses:
        200:
          description: A collection of results from achilles results view
          schema:
            $ref: "#/definitions/Analysis"

  /v1/genomics/search-variants:
    get:
      tags:
        - genomics
      description: Gets the list of matched variants
      operationId: "searchVariants"
      parameters:
        - in: query
          name: variant-search-term
          type: string
          required: true
          description: variant search term
        - in: query
          name: page
          type: integer
          format: int32
          required: false
          description: page number
      responses:
        200:
          description: A collection of variants from the wgs_variant table
          schema:
            $ref: "#/definitions/VariantListResponse"

  /v1/genomics/variant-search-result-size:
    get:
      tags:
        - genomics
      description: Gets the size of variant result list
      operationId: "getVariantSearchResultSize"
      parameters:
        - in: query
          name: variant-search-term
          type: string
          required: true
          description: variant search term
      responses:
        200:
          description: Variant result list size
          schema:
            type: integer
            format: int64

  /v1/genomics/chart-demo-data:
    get:
      tags:
        - genomics
      description: Gets the demographic participant counts
      operationId: "getChartData"
      parameters: []
      responses:
        200:
          description: A collection of results from achilles results view
          schema:
            $ref: "#/definitions/AnalysisListResponse"

  /v1/genomics/variant-details:
    get:
      tags:
        - genomics
      description: Gets the variant details
      operationId: "getVariantDetails"
      parameters:
        - in: query
          name: variant-id
          type: string
          required: true
          description: variant id
      responses:
        200:
          description: Variant Information
          schema:
            $ref: "#/definitions/VariantInfo"

  # Data Browser #######################################################################
  /v1/config:
    get:
      tags:
      - config
      description: Returns some server configuration data.
      operationId: getConfig
      security: []
      responses:
        200:
          description: Configuration data
          schema:
            "$ref": "#/definitions/ConfigResponse"

  /v1/databrowser/cdrversion-used:
    get:
      tags:
        - dataBrowser
      description: Gets the cdr versions
      operationId: "getCdrVersionUsed"
      parameters: []
      responses:
        200:
          description: Default cdr version
          schema:
            "$ref": "#/definitions/CdrVersion"
        500:
          description: Internal Server Error

  /v1/databrowser/count-analysis:
    get:
      tags:
        - dataBrowser
      description: Gets EHR biological sex and age count analysis
      operationId: "getCountAnalysis"
      parameters:
        - in: query
          name: domain-id
          type: string
          required: true
          description: domain id
        - in: query
          name: domain-desc
          type: string
          required: true
          description: domain desc
      responses:
        200:
          description: A collection of count analysis for biological sex and age
          schema:
            $ref: "#/definitions/CountAnalysis"

  /v1/databrowser/survey-question-counts:
    get:
      tags:
        - dataBrowser

      description: Gets participant count of question by each stratum
      operationId: "getSurveyQuestionCounts"
      parameters:
        - in: query
          name: questionConceptId
          type: string
          required: true
        - in: query
          name: questionPath
          type: string
          required: true
      responses:
        200:
          description: Gender and age stratum counts for each question
          schema:
            $ref: "#/definitions/AnalysisListResponse"

  /v1/databrowser/fitbit-analysis-results:
    get:
      tags:
        - dataBrowser
      description: Gets analysis results of fitbit
      operationId: "getFitbitAnalysisResults"
      parameters:
        - in: query
          name: concept-names
          type: array
          items:
            type: string
          required: true
          description: concept name
      responses:
        200:
          description: Analysis objects for each of fitbit measurement
          schema:
            $ref: "#/definitions/ConceptAnalysisListResponse"



  /v1/databrowser/concept-analysis-results:
    get:
      tags:
        - dataBrowser

      description: Gets analysis results for concept
      operationId: "getConceptAnalysisResults"
      parameters:
        - in: query
          name: concept-ids
          type: array
          items:
            type: string
          required: true
          description: concept id
        - in: query
          name: domain-id
          type: string
          required: false
          description: domain id
      responses:
        200:
          description: A collection of analysis for concept
          schema:
            $ref: "#/definitions/ConceptAnalysisListResponse"

  /v1/databrowser/participant-count:
    get:
      tags:
        - dataBrowser

      description: Gets results for an analysis id and stratum
      operationId: "getParticipantCount"
      parameters: []
      responses:
        200:
          description: A collection of analysis results from achilles_results_view
          schema:
            $ref: "#/definitions/AchillesResult"

  /v1/databrowser/gender-count:
    get:
      tags:
        - dataBrowser

      description: Gets results for an analysis id
      operationId: "getGenderAnalysis"
      parameters: []
      responses:
        200:
          description: Gender analysis along with results
          schema:
            $ref: "#/definitions/Analysis"

  /v1/databrowser/getCriteriaRolledCounts:
    get:
      tags:
        - dataBrowser
      description: Gets the rolled up count from criteria
      operationId: "getCriteriaRolledCounts"
      parameters:
        - in: query
          name: conceptId
          type: integer
          format: int64
          required: true
          description: parent concept id
        - in: query
          name: domain
          type: string
          required: true
          description: parent concept domain
      responses:
        200:
          description: Rolled up counts of concept
          schema:
            $ref: "#/definitions/CriteriaParentResponse"

  /v1/databrowser/getCriteriaChildren:
    get:
      tags:
        - dataBrowser
      description: Gets the children when parent concept is expanded in ui
      operationId: "getCriteriaChildren"
      parameters:
        - in: query
          name: parentId
          type: integer
          format: int64
          required: true
          description: parent id
      responses:
        200:
          description: Criteria children
          schema:
            $ref: "#/definitions/CriteriaListResponse"

  /v1/databrowser/domain-totals:
    get:
      tags:
        - dataBrowser
      description: Gets the domain filters and survey modules with the count of all concepts and questions
      operationId: "getDomainTotals"
      parameters:
        - in: query
          name: searchWord
          type: string
          description: search key word
        - in: query
          name: testFilter
          type: integer
          format: int32
          description: measurement filter
        - in: query
          name: orderFilter
          type: integer
          format: int32
          description: measurement filter
      responses:
        200:
          description: A collection of domains and survey modules
          schema:
            $ref: "#/definitions/DomainInfosAndSurveyModulesResponse"

  /v1/databrowser/searchConcepts:
    post:
      tags:
        - dataBrowser
      consumes:
          - application/json
      description: Gets list of matched concepts
      operationId: "searchConcepts"
      parameters:
        - in: body
          name: request
          description: search concept request
          schema:
             $ref: "#/definitions/SearchConceptsRequest"
      responses:
        200:
          description: A collection of matched concepts
          schema:
            $ref: "#/definitions/ConceptListResponse"


  /v1/databrowser/source-concepts:
    get:
      tags:
        - dataBrowser

      description: Get children of the given concept
      operationId: "getSourceConcepts"
      parameters:
        - in: query
          name: concept_id
          type: integer
          format: int64
          required: true
          description: concept id to get maps to concepts
        - in: query
          name: minCount
          type: integer
          format: int32
          required: false
          description: minimum source count
      responses:
        200:
          description: a collection of concepts
          schema:
            $ref: "#/definitions/ConceptListResponse"

  /v1/databrowser/survey-questions:
    get:
      tags:
        - dataBrowser
      description: Get survey questions
      operationId: "getSurveyQuestions"
      parameters:
        - in: query
          name: survey_concept_id
          type: integer
          format: int64
          required: true
          description: survey concept id
        - in: query
          name: search_word
          type: string
          required: false
          description: search word in surveys page
        - in: query
          name: question-concept-ids
          type: array
          items:
            type: string
          required: false
          description: concept id
      responses:
        200:
          description: survey question fetch
          schema:
            $ref: "#/definitions/SurveyQuestionFetchResponse"

  /v1/databrowser/sub-questions:
    get:
      tags:
        - dataBrowser
      description: Get survey sub questions
      operationId: "getSubQuestions"
      parameters:
        - in: query
          name: survey_concept_id
          type: integer
          format: int64
          required: true
          description: survey concept id
        - in: query
          name: question_concept_id
          type: integer
          format: int64
          required: true
          description: question concept id
        - in: query
          name: answer_concept_id
          type: integer
          format: int64
          required: true
          description: answer concept id
        - in: query
          name: level
          type: integer
          format: int32
          required: true
          description: sub question level
      responses:
        200:
          description: survey sub question fetch
          schema:
            $ref: "#/definitions/SurveyQuestionFetchResponse"

  /v1/databrowser/survey-question-results:
    get:
      tags:
        - dataBrowser
      description: Get Survey Question Results
      operationId: "getSurveyQuestionResults"
      parameters:
        - in: query
          name: survey_concept_id
          type: integer
          format: int64
          required: true
          description: survey concept id
        - in: query
          name: question_concept_id
          type: integer
          format: int64
          required: true
          description: question concept id
        - in: query
          name: questionPath
          type: string
          description: question path
      responses:
        200:
          description: survey question results
          schema:
            $ref: "#/definitions/AnalysisListResponse"

  /v1/databrowser/survey-version-counts:
    get:
      tags:
        - dataBrowser
      description: Get Survey Version Counts
      operationId: "getSurveyVersionCounts"
      parameters:
        - in: query
          name: survey_concept_id
          type: integer
          format: int64
          required: true
          description: survey concept id
      responses:
        200:
          description: survey version counts
          schema:
            $ref: "#/definitions/SurveyVersionCountResponse"

##########################################################################################
## DEFINITIONS
##########################################################################################
definitions:
  Concept:
    type: object
    required:
      - conceptId
      - conceptName
      - domainId
      - vocabularyId
      - conceptCode
      - conceptClassId
      - standardConcept

    properties:
      conceptId:
        description: id of the concept
        type: integer
        format: int64
      conceptName:
        description: name of concept
        type: string
      domainId:
        description: domain of concept
        type: string
      vocabularyId:
        description: vocabulary of concept
        type: string
      conceptCode:
        description: original vocab code of concept
        type: string
      conceptClassId:
        description: class of concept
        type: string
      standardConcept:
        description: standard concept value 1 char
        type: string
      countValue:
        description: est count in the cdr
        type: integer
        format: int64
      sourceCountValue:
        description: est source count in the cdr
        type: integer
        format: int64
      prevalence:
        description: prevalence among participants percent count divided num participants
        type: number
        format: float
      conceptSynonyms:
        description: concept synonym names
        type: "array"
        items:
          type: "string"
      canSelect:
        description: filters clickable concepts
        type: integer
        format: int32
      measurementConceptInfo:
        description: measurement concept info
        type: object
        $ref: "#/definitions/MeasurementConceptInfo"
      drugBrands:
        description: drug brand names
        type: "array"
        items:
          type: "string"
      standardConcepts:
        type: "array"
        items:
          $ref: "#/definitions/Concept"
          description: standard concepts associated with the matched concept
      matchType:
        description: match column type on which concept search was successful
        $ref: "#/definitions/MatchType"

  ConceptListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Concept"
      matchType:
        description: match column type on which concept search was successful
        $ref: "#/definitions/MatchType"
      matchedConceptName:
        description: matched concept name
        type: string

  SurveyQuestionFetchResponse:
    type: object
    required:
      - items
    properties:
      questions:
        description: survey questions
        type: object
        $ref: "#/definitions/SurveyMetadataListResponse"
      survey:
        $ref: "#/definitions/SurveyModule"

  SubQuestionFetchResponse:
    type: object
    required:
      - items
    properties:
      questions:
        description: survey questions
        type: object
        $ref: "#/definitions/SurveyMetadataListResponse"

  SurveyVersionCountResponse:
    type: object
    required:
      - items
    properties:
      analyses:
        description: analysis objects
        type: object
        $ref: "#/definitions/AnalysisListResponse"

  MeasurementConceptInfo:
    type: object
    properties:
      conceptId:
        type: integer
        format: int64
      hasValues:
        type: integer
        format: int32

  ConfigResponse:
    type: object
    properties:
      projectId:
        type: string
        description: The cloud project in which this app is running.
      dataBrowserIsSafe:      
        type: boolean
        description: Whether the data is safe to show. An emergency page will show if set to false.
      publicApiKeyForErrorReports:
        type: string
        description: |
          Stackdriver API key for error reporting, scoped to a particular
          domain. If unset, Stackdriver error reporting should be disabled.

  Criteria:
    type: object
    required:
      - id
      - parentId
      - type
      - name
      - path
    properties:
      id:
        description: Primary identifier which is unique within a CDR version.
        type: integer
        format: int64
      parentId:
        description: The parent id of the criteria. 0 if this is the root node of a criteria tree
        type: integer
        format: int64
      type:
        description: type of this criteria
        type: string
      subtype:
        description: sub type of this criteria
        type: string
      code:
        description: concept code
        type: string
      name:
        description: concept name
        type: string
      group:
        description: boolean field which represents if the criteria has children
        type: boolean
      selectable:
        description: boolean field which represents if the criteria is selectable
        type: boolean
      count:
        description: count
        type: integer
        format: int64
      sourceCount:
        description: count
        type: integer
        format: int64
      domainId:
        description: domain id
        type: string
      conceptId:
        description: concept id
        type: string
      path:
        description: path of concept in the criteria tree
        type: string
      synonyms:
        description: synonyms
        type: string
      canSelect:
        description: filters clickable concepts
        type: integer
        format: int32

  CriteriaListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Criteria"

  CriteriaParentResponse:
    type: object
    required:
      - items
    properties:
      parent:
        description: parent row
        $ref: "#/definitions/Criteria"

  SurveyMetadata:
    type: object
    required:
      - conceptId
      - conceptName
      - surveyName

    properties:
      id:
        description: id of each row
        type: integer
        format: int64
      conceptId:
        description: id of the concept
        type: integer
        format: int64
      conceptName:
        description: name of concept
        type: string
      surveyName:
        description: survey name
        type: string
      conceptCode:
        description: original vocab code of concept
        type: string
      countValue:
        description: est count in the cdr
        type: integer
        format: int64
      surveyConceptId:
        description: survey concept id
        type: integer
        format: int64
      sub:
        description: flag to indicate if a question is a sub question
        type: integer
        format: int32
      path:
        description: question path
        type: string
      is_parent_question:
        description: flag to indicate if the question is parent question
        type: integer
        format: int32
      orderNumber:
        description: question order number
        type: integer
        format: int32
      questionString:
        description: question string
        type: string
      type:
        description: type of survey data
        type: string
      countAnalysis:
        description: count analysis
        $ref: "#/definitions/Analysis"
      genderAnalysis:
        description: gender analysis
        $ref: "#/definitions/Analysis"
      ageAnalysis:
        description: age analysis
        $ref: "#/definitions/Analysis"
      versionAnalysis:
        description: version analysis
        $ref: "#/definitions/Analysis"
      participantCountAnalysis:
        description: participant count analysis
        $ref: "#/definitions/Analysis"

  SurveyMetadataListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/SurveyMetadata"

  AchillesResult:
    type: object
    required:
      - analysisId

    properties:
      id:
        description: pk id for jpa code to work
        type: integer
        format: int64
      analysisId:
        description: id analysis
        type: integer
        format: int64
      stratum1:
        description: stratum 1
        type: string
      stratum2:
        description: stratum 2
        type: string
      stratum3:
        description: stratum 3
        type: string
      stratum4:
        description: stratum 4
        type: string
      stratum5:
        description: stratum 5
        type: string
      stratum6:
        description: stratum6
        type: string
      stratum7:
        description: stratum7
        type: string
      analysisStratumName:
        description: stratum 5 Name
        type: string
      measurementValueType:
        description: measurement value type (text / numeric)
        type: string
      countValue:
        description: count
        type: integer
        format: int64
      sourceCountValue:
        description: source count
        type: integer
        format: int64

  AchillesResultListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/AchillesResult"

  AchillesResultDist:
    type: object
    required:
      - analysisId

    properties:
      id:
        description: pk id for jpa code to work
        type: integer
        format: int64
      analysisId:
        description: id analysis
        type: integer
        format: int64
      stratum1:
        description: stratum 1
        type: string
      stratum2:
        description: stratum 2
        type: string
      stratum3:
        description: stratum 3
        type: string
      stratum4:
        description: stratum 4
        type: string
      stratum5:
        description: stratum 5
        type: string
      stratum6:
        description: stratum 6
        type: string
      countValue:
        description: count
        type: integer
        format: int64
      minValue:
        description: min value
        type: number
        format: float
      maxValue:
        description: max value
        type: number
        format: float
      avgValue:
        description: avg value
        type: number
        format: float
      stdevValue:
        description: std deviation value
        type: number
        format: float
      medianValue:
        description: median value
        type: number
        format: float
      p10Value:
        description: 10th percentile  value
        type: number
        format: float
      p25Value:
        description: 25th percentile value
        type: number
        format: float
      p75Value:
        description: 75th percentile value
        type: number
        format: float
      p90Value:
        description: 90th percentile value
        type: number
        format: float

  Analysis:
    type: object
    required:
      - analysisId
    properties:
      analysisId:
        description: id analysis
        type: integer
        format: int64
      analysisName:
        description:  analysis name
        type: string
      stratum1Name:
        description:  usually concept name corresponding to stratum
        type: string
      stratum2Name:
        description:  usually concept name corresponding to stratum
        type: string
      stratum3Name:
        description:  usually concept name corresponding to stratum
        type: string
      stratum4Name:
        description:  usually concept name corresponding to stratum
        type: string
      stratum5Name:
        description:  usually concept name corresponding to stratum
        type: string
      stratum6Name:
        description:  usually concept name corresponding to stratum
        type: string
      stratum7Name:
        description:  usually concept name corresponding to stratum
        type: string
      chartType:
        description:  chart type to display for this analysis column pie box
        type: string
      dataType:
        description:  data type of this analysis count or distribution
        type: string
      results:
        description: count results
        type: array
        items:
          $ref: "#/definitions/AchillesResult"
      distResults:
        description: distribution results
        type: array
        items:
          $ref: "#/definitions/AchillesResultDist"
      unitName:
        description: unit name
        type: string

  AnalysisListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Analysis"

  DomainInfosAndSurveyModulesResponse:
    type: object
    required:
      - domainInfos
      - surveyModules
    properties:
      domainInfos:
        type: "array"
        items:
          $ref: "#/definitions/DomainInfo"
      surveyModules:
        type: "array"
        items:
          $ref: "#/definitions/SurveyModule"

  ConceptAnalysis:
    type: object
    required:
      - conceptId
    properties:
      conceptId:
        description: concept id
        type: string
      countAnalysis:
        description: count analysis
        type: object
        $ref: "#/definitions/Analysis"
      genderAnalysis:
        description: gender analysis
        type: object
        $ref: "#/definitions/Analysis"
      ageAnalysis:
        description: age analysis
        type: object
        $ref: "#/definitions/Analysis"
      measurementValueGenderAnalysis:
        description: measurement value gender analysis
        type: array
        items:
          $ref: "#/definitions/Analysis"
      measurementValueAgeAnalysis:
        description: age analysis for measurement values
        type: array
        items:
          $ref: "#/definitions/Analysis"
      measurementDistributionAnalysis:
        description: measurement distribution analysis
        type: array
        items:
          $ref: "#/definitions/Analysis"
      measurementGenderCountAnalysis:
        description: measurement gender count by unit analysis
        type: array
        items:
          $ref: "#/definitions/Analysis"
      ehrCountAnalysis:
        description: count analysis
        type: object
        $ref: "#/definitions/Analysis"
      participantCountAnalysis:
        description: participant count by date analysis
        type: object
        $ref: "#/definitions/Analysis"

  ConceptAnalysisListResponse:
    type: object
    required:
       - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/ConceptAnalysis"

  CountAnalysis:
    type: object
    required:
      - domainId
    properties:
      domainId:
        description: domain id
        type: string
      genderCountAnalysis:
        description: biological sex count analysis
        type: object
        $ref: "#/definitions/Analysis"
      ageCountAnalysis:
        description: age count analysis
        type: object
        $ref: "#/definitions/Analysis"

  StandardConceptFilter:
    type: string
    description: filter on whether standard, non-standard, or all concepts should be returned\
    enum: &STANDARD_CONCEPT_FILTER [ALL_CONCEPTS, STANDARD_CONCEPTS, NON_STANDARD_CONCEPTS, STANDARD_OR_CODE_ID_MATCH]
  TestFilter:
    type: string
    description: filter to toggle lab measurement tests
    enum: &TEST_FILTER [SELECTED, UNSELECTED]
  OrderFilter:
    type: string
    description: filter to toggle lab measurement orders
    enum: &ORDER_FILTER [SELECTED, UNSELECTED]
  Domain:
    type: string
    description: a domain for concepts corresponding to a table in the OMOP schema
    enum:
      - OBSERVATION
      - PROCEDURE
      - DRUG
      - CONDITION
      - MEASUREMENT
      - DEVICE
      - DEATH
      - VISIT
  MatchType:
    type: string
    description: match column type on concept search
    enum:
      - CONCEPT_CODE
      - CONCEPT_ID
      - CONCEPT_NAME
  AnalysisIdConstant:
    type: string
    description: analysis id constant map
    enum:
      - PARTICIPANT_COUNT_ANALYSIS_ID
      - GENDER_ANALYSIS
      - COUNT_ANALYSIS_ID
      - SURVEY_GENDER_COUNT_ANALYSIS_ID
      - SURVEY_AGE_COUNT_ANALYSIS_ID
      - SURVEY_PARTICIPANT_COUNT_ANALYSIS_ID
      - GENDER_ANALYSIS_ID
      - PARTICIPANT_COUNT_BY_DATE_ANALYSIS_ID
      - AGE_ANALYSIS_ID
      - SURVEY_VERSION_PARTICIPANT_COUNT_ANALYSIS_ID
      - SURVEY_VERSION_QUESTION_COUNT_ANALYSIS_ID
      - SURVEY_COUNT_ANALYSIS_ID
      - SURVEY_GENDER_ANALYSIS_ID
      - SURVEY_AGE_ANALYSIS_ID
      - SURVEY_VERSION_ANALYSIS_ID
      - SURVEY_QUESTION_GENDER_COUNT_ANALYSIS_ID
      - SURVEY_QUESTION_AGE_COUNT_ANALYSIS_ID
      - EHR_GENDER_COUNT_ANALYSIS_ID
      - EHR_AGE_COUNT_ANALYSIS_ID
      - RACE_ANALYSIS_ID
      - ETHNICITY_ANALYSIS_ID
      - MEASUREMENT_DIST_ANALYSIS_ID
      - MEASUREMENT_GENDER_ANALYSIS_ID
      - MEASUREMENT_GENDER_UNIT_ANALYSIS_ID
      - RACE_ANALYSIS
      - ETHNICITY_ANALYSIS
      - GENO_GENDER_ANALYSIS
      - GENO_AGE_ANALYSIS
      - GENO_RACE_ANALYSIS

  SearchConceptsRequest:
    type: object
    required:
      - query
    properties:
      query:
        type: string
        description: >
            A query string that can be used to match a subset of the name (case-insensitively),
            the entire code value (case-insensitively), or the concept ID.
      standardConceptFilter:
        description: >
            STANDARD_CONCEPTS if only standard concepts should be returned,
            NON_STANDARD_CONCEPTS if only non-standard
            concepts should be returned; defaults to ALL_CONCEPTS, meaning both
            standard and non-standard concepts will be returned.
        $ref: "#/definitions/StandardConceptFilter"
      vocabularyIds:
        type: array
        items:
          type: string
        description: The vocabulary ID for the concepts returned (e.g. SNOMED, RxNorm)
      domain:
        description: >
            The domain for the concepts returned (e.g. OBSERVATION, DRUG). Note that this may map
            to multiple domain ID values in OMOP.
        $ref: "#/definitions/Domain"
      maxResults:
        type: integer
        format: int32
        description: The maximum number of results returned. Defaults to 25.
      minCount:
        type: integer
        format: int32
        description: The minimum count of concepts to be fetched
      pageNumber:
        type: integer
        default: 0
        description: By default it returns the first page and then its next pages from that on.
      measurementTests:
        type: integer
        default: 1
        description: By default all the measurement tests are returned
      measurementOrders:
        type: integer
        default: 1
        description: By default all the measurement orders are returned

  CdrVersion:
    type: object
    required:
      - cdrVersionId
      - name
      - creationTime
    properties:
      cdrVersionId:
        type: string
      name:
        type: string
      numParticipants:
        type: integer
        format: int32
      creationTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.

  CdrVersionListResponse:
    type: object
    required:
      - items
      - defaultCdrVersionId
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/CdrVersion"
      defaultCdrVersionId:
        type: "string"
        description: ID of the CDR versions that should be used by the user by default

  DomainInfo:
    type: object
    required:
      - domain
      - name
      - description
      - standardConceptCount
      - allConceptCount
      - participantCount
    properties:
      domain:
        description: the domain ID
        $ref: "#/definitions/Domain"
      domainConceptId:
        description: domain concept id
        type: integer
        format: int64
      name:
        description: display name of the domain
        type: string
      description:
        description: description of the domain
        type: string
      standardConceptCount:
        description: number of standard concepts in this domain
        type: integer
        format: int64
      allConceptCount:
        description: number of concepts in this domain (standard or non-standard)
        type: integer
        format: int64
      participantCount:
        description: number of participants with data in the CDR for a concept in this domain
        type: integer
        format: int64

  SurveyModule:
    type: object
    required:
      - conceptId
      - name
      - description
      - questionCount
      - participantCount
    properties:
      conceptId:
        description: the concept ID for the survey module
        type: integer
        format: int64
      name:
        description: display name of the module
        type: string
      description:
        description: description of the module
        type: string
      questionCount:
        description: number of questions in the module
        type: integer
        format: int64
      participantCount:
        description: number of participants with data in the CDR for questions in this module
        type: integer
        format: int64
      orderNumber:
        description: survey release order number
        type: integer
        format: int32

  ErrorResponse:
    type: object
    properties:
      message:
        description: Error message
        type: string
      statusCode:
        description: Http error status code
        type: integer
      errorClassName:
        type: string
      errorCode:
        description: Short description of the type of error
        $ref: "#/definitions/ErrorCode"
      errorUniqueId:
        type: string
        description: Unique ID for this error response, for correlation with backend logs

  ErrorCode:
    type: string
    description: Short parsable error descriptions
    enum: [
      PARSE_ERROR
    ]

  Variant:
    type: object
    required:
      - variantId
    properties:
      variantId:
        description: id variant
        type: string
      genes:
        description: genes
        type: string
      consequence:
        description: consequence
        type: array
        items:
          type: string
      proteinChange:
        description: protein change
        type: string
      clinicalSignificance:
        description: clinical significance
        type: array
        items:
          type: string
      alleleCount:
        description: allele count
        type: integer
        format: int64
      alleleNumber:
        description: allele count
        type: integer
        format: int64
      alleleFrequency:
        description: allele count
        type: number
        format: double

  VariantListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Variant"

  VariantInfo:
    type: object
    required:
      - variantId
    properties:
      variantId:
        description: variant id
        type: string
      dnaChange:
        description: dna change
        type: string
      transcript:
        description: transcript
        type: string
      rsNumber:
        description: rs number
        type: array
        items:
          type: string
      afrAlleleCount:
        description: allele count
        type: integer
        format: int64
      afrAlleleNumber:
        description: allele count
        type: integer
        format: int64
      afrAlleleFrequency:
        description: allele count
        type: number
        format: double
      easAlleleCount:
        description: allele count
        type: integer
        format: int64
      easAlleleNumber:
        description: allele count
        type: integer
        format: int64
      easAlleleFrequency:
        description: allele count
        type: number
        format: double
      eurAlleleCount:
        description: allele count
        type: integer
        format: int64
      eurAlleleNumber:
        description: allele count
        type: integer
        format: int64
      eurAlleleFrequency:
        description: allele count
        type: number
        format: double
      amrAlleleCount:
        description: allele count
        type: integer
        format: int64
      amrAlleleNumber:
        description: allele count
        type: integer
        format: int64
      amrAlleleFrequency:
        description: allele count
        type: number
        format: double
      midAlleleCount:
        description: allele count
        type: integer
        format: int64
      midAlleleNumber:
        description: allele count
        type: integer
        format: int64
      midAlleleFrequency:
        description: allele count
        type: number
        format: double
      sasAlleleCount:
        description: allele count
        type: integer
        format: int64
      sasAlleleNumber:
        description: allele count
        type: integer
        format: int64
      sasAlleleFrequency:
        description: allele count
        type: number
        format: double
      othAlleleCount:
        description: allele count
        type: integer
        format: int64
      othAlleleNumber:
        description: allele count
        type: integer
        format: int64
      othAlleleFrequency:
        description: allele count
        type: number
        format: double