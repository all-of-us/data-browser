# If validation fails, gradle:generateApi fails claiming this file does not exist.
# For separate validation (with some false positives), do:
#     ./project.rb validate-swagger
swagger: '2.0'
info:
  version: "0.1.0"
  title: "AllOfUs Public API"
  description: "The API for the AllOfUs data browser and public storefront."
  termsOfService: "http://www.pmi-ops.org/terms_of_service.html"
  contact:
    name: "developer_help@pmi-ops.org"
  license:
    name: "BSD"
host: "public-api.pmi-ops.org"
schemes:
  - "https"
produces:
  - "application/json"
securityDefinitions:
  # Establish the fact that *some endpoints* are OAuth protected
  # by defining an `aou_oauth` security mode, which we'll assing
  # to any protected endpoints below.
  aou_oauth:
    # TODO: Vet/fix this token and/or authorization URL to work in practice.
    # These are currently included simply to satisfy the Swagger specification,
    # as this is not directly used to dictate oauth details (just used to
    # annotate which methods require oauth).
    authorizationUrl: ""
    tokenUrl: ""
    type: oauth2
    flow: accessCode
security:
  - aou_oauth: []

# Throughout, we use integer/int64 in preference to string/date-time because Swagger's
# date formatting is inconsistent between server and client. Time values are stored as
# milliseconds since the UNIX epoch.


##########################################################################################
## PATHS
##########################################################################################

paths:

  # Data Browser #######################################################################
  /v1/config:
    get:
      tags:
      - config
      description: Returns some server configuration data.
      operationId: getConfig
      security: []
      responses:
        200:
          description: Configuration data
          schema:
            "$ref": "#/definitions/ConfigResponse"
  /v1/databrowser/survey-results:
    get:
      tags:
        - dataBrowser

      description: Gets list of quetions with results for a survey
      operationId: "getSurveyResults"
      parameters:
        - in: query
          name: survey_concept_id
          type: string
          required: true
          description: survey concept id
      responses:
        200:
          description: A collection of survey modules
          schema:
            $ref: "#/definitions/QuestionConceptListResponse"

  /v1/databrowser/concept-analysis-results:
    get:
      tags:
        - dataBrowser

      description: Gets analysis results for concept
      operationId: "getConceptAnalysisResults"
      parameters:
        - in: query
          name: concept-ids
          type: array
          items:
            type: string
          required: true
          description: concept id
      responses:
        200:
          description: A collection of analysis for concept
          schema:
            $ref: "#/definitions/ConceptAnalysisListResponse"

  /v1/databrowser/participant-count:
    get:
      tags:
        - dataBrowser

      description: Gets results for an analysis id and stratum
      operationId: "getParticipantCount"
      parameters: []
      responses:
        200:
          description: A collection of analysis results from achilles_results_view
          schema:
            $ref: "#/definitions/AchillesResult"

  /v1/databrowser/gender-count:
    get:
      tags:
        - dataBrowser

      description: Gets results for an analysis id
      operationId: "getGenderAnalysis"
      parameters: []
      responses:
        200:
          description: Gender analysis along with results
          schema:
            $ref: "#/definitions/Analysis"

  /v1/databrowser/race-count:
    get:
      tags:
        - dataBrowser

      description: Gets results for an analysis id
      operationId: "getRaceAnalysis"
      parameters: []
      responses:
        200:
          description: Race analysis along with results
          schema:
            $ref: "#/definitions/Analysis"

  /v1/databrowser/ethnicity-count:
    get:
      tags:
        - dataBrowser

      description: Gets results for an analysis id
      operationId: "getEthnicityAnalysis"
      parameters: []
      responses:
        200:
          description: Ethnicity analysis along with results
          schema:
            $ref: "#/definitions/Analysis"

  /v1/databrowser/domain-search:
    get:
      tags:
        - dataBrowser
      description: Gets the domain filters and survey modules with the count of matched concepts
      operationId: "getDomainSearchResults"
      parameters:
        - in: query
          name: searchWord
          type: string
          required: true
          description: search key word
      responses:
        200:
          description: A collection of domains and survey modules
          schema:
            $ref: "#/definitions/DomainInfosAndSurveyModulesResponse"
  /v1/databrowser/domain-totals:
    get:
      tags:
        - dataBrowser
      description: Gets the domain filters and survey modules with the count of all concepts and questions
      operationId: "getDomainTotals"
      parameters: []
      responses:
        200:
          description: A collection of domains and survey modules
          schema:
            $ref: "#/definitions/DomainInfosAndSurveyModulesResponse"

  /v1/databrowser/searchConcepts:
    post:
      tags:
        - dataBrowser
      description: Gets list of matched concepts
      operationId: "searchConcepts"
      parameters:
        - in: body
          name: request
          description: search concept request
          schema:
             $ref: "#/definitions/SearchConceptsRequest"
      responses:
        200:
          description: A collection of matched concepts
          schema:
            $ref: "#/definitions/ConceptListResponse"


  /v1/databrowser/source-concepts:
    get:
      tags:
        - dataBrowser

      description: Get children of the given concept
      operationId: "getSourceConcepts"
      parameters:
        - in: query
          name: concept_id
          type: integer
          format: int64
          required: true
          description: concept id to get maps to concepts
        - in: query
          name: minCount
          type: integer
          format: int32
          required: false
          description: minimum source count
      responses:
        200:
          description: a collection of concepts
          schema:
            $ref: "#/definitions/ConceptListResponse"

##########################################################################################
## DEFINITIONS
##########################################################################################
definitions:
  Concept:
    type: object
    required:
      - conceptId
      - conceptName
      - domainId
      - vocabularyId
      - conceptCode
      - conceptClassId
      - standardConcept

    properties:
      conceptId:
        description: id of the concept
        type: integer
        format: int64
      conceptName:
        description: name of concept
        type: string
      domainId:
        description: domain of concept
        type: string
      vocabularyId:
        description: vocabulary of concept
        type: string
      conceptCode:
        description: original vocab code of concept
        type: string
      conceptClassId:
        description: class of concept
        type: string
      standardConcept:
        description: standard concept value 1 char
        type: string
      countValue:
        description: est count in the cdr
        type: integer
        format: int64
      sourceCountValue:
        description: est source count in the cdr
        type: integer
        format: int64
      prevalence:
        description: prevalence among participants percent count divided num participants
        type: number
        format: float
      conceptSynonyms:
        description: concept synonym names
        type: "array"
        items:
          type: "string"

  ConceptListResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: "array"
          items:
            $ref: "#/definitions/Concept"
        matchType:
          description: match column type on which concept search was successful
          $ref: "#/definitions/MatchType"
        standardConcepts:
          type: "array"
          items:
            $ref: "#/definitions/Concept"
          description: standard concepts associated with the matched concept
  ConfigResponse:
    type: object
    required:
    - gsuiteDomain
    properties:
      gsuiteDomain:
        type: string
        description: G-Suite domain containing user accounts.
      projectId:
        type: string
        description: The cloud project in which this app is running.
      enforceRegistered:
        type: boolean
        description: |
          Whether the user's data access level should gate other Workbench functionality, namely
          to functionality requiring CDR access.
      publicApiKeyForErrorReports:
        type: string
        description: |
          Stackdriver API key for error reporting, scoped to a particular
          domain. If unset, Stackdriver error reporting should be disabled.
  QuestionConcept:
    type: object
    required:
      - conceptId
      - conceptName
      - domainId
      - conceptCode
      - standardConcept

    properties:
      conceptId:
        description: id of the concept
        type: integer
        format: int64
      conceptName:
        description: name of concept
        type: string
      domainId:
        description: domain of concept
        type: string
      conceptCode:
        description: original vocab code of concept
        type: string
      countValue:
        description: est count in the cdr
        type: integer
        format: int64
      prevalence:
        description: prevalence among participants percent count divided num participants
        type: number
        format: float
      countAnalysis:
        description: count analysis
        $ref: "#/definitions/Analysis"
      genderAnalysis:
        description: gender analysis
        $ref: "#/definitions/Analysis"
      ageAnalysis:
        description: age analysis
        $ref: "#/definitions/Analysis"
      genderIdentityAnalysis:
        description: gender identity analysis
        $ref: "#/definitions/Analysis"

  QuestionConceptListResponse:
    type: object
    required:
      - items
    properties:
      survey:
        $ref: "#/definitions/SurveyModule"
      items:
        type: array
        items:
          $ref: "#/definitions/QuestionConcept"


  AchillesResult:
    type: object
    required:
      - analysisId

    properties:
      id:
        description: pk id for jpa code to work
        type: integer
        format: int64
      analysisId:
        description: id analysis
        type: integer
        format: int64
      stratum1:
        description: stratum 1
        type: string
      stratum2:
        description: stratum 2
        type: string
      stratum3:
        description: stratum 3
        type: string
      stratum4:
        description: stratum 4
        type: string
      stratum5:
        description: stratum 5
        type: string
      analysisStratumName:
        description: stratum 5 Name
        type: string
      countValue:
        description: count
        type: integer
        format: int64
      sourceCountValue:
        description: source count
        type: integer
        format: int64

  AchillesResultListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/AchillesResult"


  AchillesResultDist:
    type: object
    required:
      - analysisId

    properties:
      id:
        description: pk id for jpa code to work
        type: integer
        format: int64
      analysisId:
        description: id analysis
        type: integer
        format: int64
      stratum1:
        description: stratum 1
        type: string
      stratum2:
        description: stratum 2
        type: string
      stratum3:
        description: stratum 3
        type: string
      stratum4:
        description: stratum 4
        type: string
      stratum5:
        description: stratum 5
        type: string
      countValue:
        description: count
        type: integer
        format: int64
      minValue:
        description: min value
        type: number
        format: float
      maxValue:
        description: max value
        type: number
        format: float
      avgValue:
        description: avg value
        type: number
        format: float
      stdevValue:
        description: std deviation value
        type: number
        format: float
      medianValue:
        description: median value
        type: number
        format: float
      p10Value:
        description: 10th percentile  value
        type: number
        format: float
      p25Value:
        description: 25th percentile value
        type: number
        format: float
      p75Value:
        description: 75th percentile value
        type: number
        format: float
      p90Value:
        description: 90th percentile value
        type: number
        format: float

  Analysis:
    type: object
    required:
      - analysisId
    properties:
      analysisId:
        description: id analysis
        type: integer
        format: int64
      analysisName:
        description:  analysis name
        type: string
      stratum1Name:
        description:  usually concept name corresponding to stratum
        type: string
      stratum2Name:
        description:  usually concept name corresponding to stratum
        type: string
      stratum3Name:
        description:  usually concept name corresponding to stratum
        type: string
      stratum4Name:
        description:  usually concept name corresponding to stratum
        type: string
      stratum5Name:
        description:  usually concept name corresponding to stratum
        type: string
      chartType:
        description:  chart type to display for this analysis column pie box
        type: string
      dataType:
        description:  data type of this analysis count or distribution
        type: string
      results:
        description: count results
        type: array
        items:
          $ref: "#/definitions/AchillesResult"
      distResults:
        description: distribution results
        type: array
        items:
          $ref: "#/definitions/AchillesResultDist"
      unitName:
        description: unit name
        type: string

  AnalysisListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Analysis"

  DomainInfosAndSurveyModulesResponse:
    type: object
    required:
      - domainInfos
      - surveyModules
    properties:
      domainInfos:
        type: "array"
        items:
          $ref: "#/definitions/DomainInfo"
      surveyModules:
        type: "array"
        items:
          $ref: "#/definitions/SurveyModule"

  ConceptAnalysis:
    type: object
    required:
      - conceptId
    properties:
      conceptId:
        description: concept id
        type: string
      genderAnalysis:
        description: gender analysis
        type: object
        $ref: "#/definitions/Analysis"
      genderIdentityAnalysis:
        description: gender identity analysis
        type: object
        $ref: "#/definitions/Analysis"
      ageAnalysis:
        description: age analysis
        type: object
        $ref: "#/definitions/Analysis"
      raceAnalysis:
        description: race analysis
        type: object
        $ref: "#/definitions/Analysis"
      ethnicityAnalysis:
        description: ethnicity analysis
        type: object
        $ref: "#/definitions/Analysis"
      measurementValueGenderAnalysis:
        description: measurement value gender analysis
        type: array
        items:
          $ref: "#/definitions/Analysis"
      measurementValueAgeAnalysis:
        description: age analysis for measurement values
        type: array
        items:
          $ref: "#/definitions/Analysis"
      measurementDistributionAnalysis:
        description: measurement distribution analysis
        type: array
        items:
          $ref: "#/definitions/Analysis"

  ConceptAnalysisListResponse:
    type: object
    required:
       - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/ConceptAnalysis"

  StandardConceptFilter:
    type: string
    description: filter on whether standard, non-standard, or all concepts should be returned\
    enum: &STANDARD_CONCEPT_FILTER [ALL_CONCEPTS, STANDARD_CONCEPTS, NON_STANDARD_CONCEPTS, STANDARD_OR_CODE_ID_MATCH]
  Domain:
    type: string
    description: filter on the domain in which concepts should be returned
    enum: &DOMAIN [OBSERVATION, PROCEDURE, DRUG, CONDITION, MEASUREMENT, DEVICE, RACE, GENDER, ETHNICITY]
  MatchType:
    type: string
    description: match column type on concept search
    enum: [CONCEPT_CODE, CONCEPT_ID, CONCEPT_NAME]

  SearchConceptsRequest:
    type: object
    required:
      - query
    properties:
      query:
        type: string
        description: >
            A query string that can be used to match a subset of the name (case-insensitively),
            the entire code value (case-insensitively), or the concept ID.
      standardConceptFilter:
        description: >
            STANDARD_CONCEPTS if only standard concepts should be returned,
            NON_STANDARD_CONCEPTS if only non-standard
            concepts should be returned; defaults to ALL_CONCEPTS, meaning both
            standard and non-standard concepts will be returned.
        $ref: "#/definitions/StandardConceptFilter"
      vocabularyIds:
        type: array
        items:
          type: string
        description: The vocabulary ID for the concepts returned (e.g. SNOMED, RxNorm)
      domain:
        description: >
            The domain for the concepts returned (e.g. OBSERVATION, DRUG). Note that this may map
            to multiple domain ID values in OMOP.
        $ref: "#/definitions/Domain"
      maxResults:
        type: integer
        format: int32
        description: The maximum number of results returned. Defaults to 25.
      minCount:
        type: integer
        format: int32
        description: The minimum count of concepts to be fetched